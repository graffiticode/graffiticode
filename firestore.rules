rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function verifyFields(required, optional) {
      let allAllowedFields = required.concat(optional);
      return request.resource.data.keys().hasAll(required) &&
        request.resource.data.keys().hasOnly(allAllowedFields);
    }

    function isOwnerOrAdmin() {
      let isOwner = request.auth != null && resource.data.uid == request.auth.uid;
      let isAdmin = request.auth != null && request.auth.token.isAdmin == true;
      return isOwner || isAdmin;
    }

    match /refresh-tokens/{refreshToken} {
      allow read: if isOwnerOrAdmin();
      allow write: if false;

      match /private/{key} {
        allow read, write: if false;
      }
    }

    match /api-keys/{apiKey} {
      allow read: if isOwnerOrAdmin();
      allow write: if false;

      match /private/{key} {
        allow read, write: if false;
      }
    }
  }
}